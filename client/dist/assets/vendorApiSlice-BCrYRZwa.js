import{q as u}from"./index-Dn45rCbr.js";const s="/api/vendors",n=u.injectEndpoints({endpoints:t=>({addVendorDetails:t.mutation({query:e=>({url:`${s}/vendorDetails`,method:"POST",body:e,credentials:"include"})}),getVendorDetails:t.query({query:e=>({url:`${s}/vendorDetails/${e}`,method:"GET"})}),requestVendorship:t.mutation({query:e=>({url:`${s}/vendorRequest`,method:"POST",body:e,credentials:"include"})}),getMyRequest:t.query({query:()=>({url:`${s}/myRequest`,method:"GET",credentials:"include"})}),getAllRequests:t.query({query:()=>({url:`${s}/vendorRequest`,method:"GET",credentials:"include"}),providesTags:["Request"]}),getRequestById:t.query({query:e=>({url:`${s}/vendorRequest/${e}`,method:"GET",credentials:"include"}),providesTags:["Request"]}),approveVendorship:t.mutation({query:e=>({url:`${s}/vendorRequest/${e}`,method:"PUT",credentials:"include"}),invalidatesTags:["Request"]}),deleteRequest:t.mutation({query:e=>({url:`${s}/vendorRequest/${e}`,method:"DELETE",credentials:"include"}),invalidatesTags:["Request"]})})}),{useAddVendorDetailsMutation:d,useGetVendorDetailsQuery:o,useRequestVendorshipMutation:a,useGetMyRequestQuery:i,useGetAllRequestsQuery:q,useGetRequestByIdQuery:l,useApproveVendorshipMutation:y,useDeleteRequestMutation:c}=n;export{o as a,a as b,i as c,q as d,c as e,l as f,y as g,d as u};
